AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ACenterA - Simple ToDo application - AppSync

Metadata:
  AWS::ServerlessRepo::Application:
    Name: servereless-todo-app
    Description: 'Complete AWS TODO App integrated with Cognito, multi-factor. Built in Vue.JS using AppSync and Dynamodb.

This solution is great to get started with your first serverless application.'
    Author: 'ACentetrA'
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    SpdxLicenseId: Apache-2.0
    Labels: ['cms','serverless','serverlesscms','acentera','plugins', 'todo']
    HomePageUrl: https://acentera.com/
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/ACenterA/acentera-aws-todo-appsync-vuejs

Outputs:

  AccountId:
    Value:
     Fn::Sub: "${AWS::AccountId}"
    Description: The AccountId for Bootstrap

  WebsiteUrl:
    Value: 
       Fn::Sub: "https://${ServerlessCloudfront.DomainName}/"
    Description: The Admin Panel Default Url

  ApiUrl:
    Value: 
      Fn::Sub: "https://${PluginRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
    Description: The API Url

  ApiId:
    Description: GraphQL API ID
    Value:
      Fn::GetAtt: GraphApi.ApiId

  ApiEndpoint:
    Description: GraphQL API Endpoint
    Value:
      Fn::GetAtt: GraphApi.GraphQLUrl

Parameters:

    SiteKey:
      Description: "ACenterA Site Key from Admin Portal"
      Default: "a2f9b231-88b5-40c9-9f75-cc14f854a7bb"
      Type: String

    SiteDataKey:
      Description: "ACenterA Site Key from Admin Portal"
      Default: "a2f9b231-88b5-40c9-9f75-cc14f854a7bb"
      Type: String

    Secret:
      Type : 'AWS::SSM::Parameter::Value<String>'
      Default: 'acentera-<%STAGE%>-secret'
      NoEcho: True

    JWTSecret:
      Type : 'AWS::SSM::Parameter::Value<String>'
      Default: 'acentera-<%STAGE%>-clientsecret'
      NoEcho: True

    ServerSecret:
      Type : 'AWS::SSM::Parameter::Value<String>'
      Default: 'acentera-<%STAGE%>-serversecret'
      NoEcho: True


    # Custom userpool informations to store in the dynamodb
    UserPoolId:
      Type: String
      Default: ''
      Description: (Optional) Custom UserPoolId

    UserPoolClientId:
      Type: String
      Default: ''
      Description: (Optional) Custom UserPoolClientId

    IdentityPoolId:
      Type: String
      Default: ''
      Description: (Optional) Custom IdentityPoolId

Mappings:
  Cognito:
    Values:
      AuthName: ACenterA
      # Warning !Ref AWS::StackName cannot contains dashes
  Plugin:
    Values:
      Name: <%PLUGIN_NAME%>
      # Warning !Ref AWS::StackName cannot contains dashes

Globals:
  Api:
    Cors:
      AllowHeaders: "'X-Version, Accept, Authorization, Content-Type'"
      AllowMethods: "'GET, POST, OPTIONS, HEAD'"
#      AllowOrigin: "'www.example.com'"

    EndpointConfiguration: REGIONAL
    BinaryMediaTypes:
      # These are equivalent to image/gif and image/png when deployed
      - image~1*
      - image~1gif
      - image~1png
      - image~1jpeg
      - image~1jpg

  Function:
    Environment:
      Variables:
        # Client Secret for JWT Signing # This should be in an SSM Parameter ... ?
#        JWT_SECRET: !ImportValue "acentera:<%STAGE%>:Secret:Client:SecretKey"
#        KEY_ID: !ImportValue "acentera:<%STAGE%>:Secret:KeyId"
        APP_DATA_TABLE_NAME: "acentera-<%STAGE%>-AppData"
        APP_DATA_PERM_TABLE_NAME: "acentera-<%STAGE%>-AppDataPermissions"
        SESSION_TABLE_NAME: "acentera-<%STAGE%>-Sessions"
        STAGE: "<%STAGE%>"
        REGION: 
          Fn::Sub: "${AWS::Region}"
        STACK_NAME:  
          Fn::Sub: "${AWS::StackName}"
        STACK_ID:  
          Fn::Sub: "${AWS::StackId}"
        PLUGIN_NAME: "<%PLUGIN_NAME%>"
        SITE_KEY: 
           Ref: SiteDataKey                                # Data key ie: ssk = X in queries
        SITE: 
           Ref: SiteKey                                    # An Unique SiteKey (or optional to add to the same default site)
        SITE_TITLE: "ServerLess ToDo App"
        JWT_SECRET: 
           Ref: JWTSecret
        KEY_ID: 
           Ref: Secret
        SECRET: 
           Ref: ServerSecret

        # Custom userpool informations to store in the dynamodb
        UserPoolId:
           Ref: UserPoolId
        UserPoolClientId:
           Ref: UserPoolClientId
        IdentityPoolId:
           Ref: IdentityPoolId

        GraphApiId:
          Fn::GetAtt: GraphApi.ApiId
        GraphApiEndpoint:
          Fn::GetAtt: GraphApi.GraphQLUrl

    Handler: main
    Runtime: go1.x
    Timeout: 60
    Layers:
     - Ref: RequestsLayer
#    Tracing: Active

Resources:

  GraphApi:
    Type: AWS::AppSync::GraphQLApi
    Description: <%PLUGIN_NAME%> Graph Api
    Properties:
      AuthenticationType: AWS_IAM # AMAZON_COGNITO_USER_POOLS
      Name: 
        Fn::Sub: ${AWS::StackName}
      #LogConfig:
      #  CloudWatchLogsRoleArn: !GetAtt AppSyncServiceRole.Arn
      #  FieldLogLevel: "ERROR"

  RequestsLayer:
    Type: 'AWS::Serverless::LayerVersion'
    Properties:
      ContentUri: shared/

  PluginRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowHeaders: "'X-Version, Accept, Authorization, Content-Type'"
        AllowMethods: "'GET, POST, OPTIONS, HEAD'"
  #      AllowOrigin: "'www.example.com'"

      EndpointConfiguration: REGIONAL
      BinaryMediaTypes:
        # These are equivalent to image/gif and image/png when deployed
        - image~1*
        - image~1gif
        - image~1png
        - image~1jpeg
        - image~1jpg
      Auth:
        DefaultAuthorizer: ACenterAuthorizer
        Authorizers:
          ACenterAuthorizer:
            FunctionPayloadType: REQUEST
            # FunctionArn: !GetAtt ACenterAuthorizerFunction.Arn
            # FunctionArn: !ImportValue "acentera:<%STAGE%>:ApiGateway:Authorizer:V1"
            FunctionArn:
               Fn::ImportValue:
                  Fn::Sub: "acentera:<%STAGE%>:ApiGateway:Authorizer:V1"
            # FunctionInvokeRole: !Ref MyRole
            Identity:
              # QueryStrings:
              #   - auth
              # NOTE: Additional options:
              Headers:
                - x-token
              # Authorization
              # StageVariables:
              #   - AUTHORIZATION
              # Context:
              #   - authorization
              # ReauthorizeEvery: 3600 # maximum of 1 hours ...
              # ReauthorizeEvery: 30 # maximum of 1 hours ...

#  ACenterAuthorizerFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: ./src
#      Handler: authorizer.handler
#      Runtime: nodejs8.10

  ApiApp:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./handlers/app
      Timeout: 60
      Events:
        GetRequest:
          Properties:
            Method: GET
            Path: /api/plugins/serverless-cms/{proxy+}
            RestApiId: 
              Ref: PluginRestApi
          Type: Api
        PostRequest:
          Properties:
            Method: POST
            Path: /api/plugins/serverless-cms/{proxy+}
            RestApiId: 
              Ref: PluginRestApi
          Type: Api
        PutRequest:
          Properties:
            Method: PUT
            Path: /api/plugins/serverless-cms/{proxy+}
            RestApiId: 
              Ref: PluginRestApi
          Type: Api
        DeleteRequest:
          Properties:
            Method: DELETE
            Path: /api/plugins/serverless-cms/{proxy+}
            RestApiId: 
              Ref: PluginRestApi
          Type: Api
      # FunctionName: !Sub acentera-${AWS::StackName}-<%STAGE%>-Api
      Runtime: go1.x
      Policies:
         # Use of * due to /index/ for gsi queries...
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppData"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppData/index/*"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppDataPermissions"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-Sessions"

  ApiInternalApp:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./handlers/app
      Timeout: 60
      Events:
        GetRequest:
          Properties:
            Method: GET
            Path: /api/internal/{proxy+}
            RestApiId: 
              Ref: PluginRestApi
          Type: Api
        PostRequest:
          Properties:
            Method: POST
            Path: /api/internal/{proxy+}
            RestApiId: 
              Ref: PluginRestApi
          Type: Api
        PutRequest:
          Properties:
            Method: PUT
            Path: /api/internal/{proxy+}
            RestApiId: 
              Ref: PluginRestApi
          Type: Api
        DeleteRequest:
          Properties:
            Method: DELETE
            Path: /api/internal/{proxy+}
            RestApiId: 
              Ref: PluginRestApi
          Type: Api
      # FunctionName: !Sub acentera-${AWS::StackName}-<%STAGE%>-Api
      Runtime: go1.x
      Environment:
        Variables:
          TYPE: "MODELSWS"
      Policies:
         # Use of * due to /index/ for gsi queries...
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppData"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppData/index/*"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppDataPermissions"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-Sessions"

  ApiPluginSettings:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./handlers/app
      Timeout: 60
      Events:
        GetSettings:
          Properties:
            Method: GET
            Path: /api/plugins/serverless-cms/settings
            RestApiId: 
              Ref: PluginRestApi
            Auth:
              Authorizer: NONE
          Type: Api

        PostBootstrap:
          Properties:
            Method: POST
            Path: /api/plugins/serverless-cms/setup/bootstrap
            RestApiId: 
              Ref: PluginRestApi
            Auth:
              Authorizer: NONE
          Type: Api

      # FunctionName: !Sub acentera-${AWS::StackName}-<%STAGE%>-ApiSettinngsBootstrap
      Runtime: go1.x
      Policies:
        # Use of * due to /index/ for gsi queries...
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppData"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppDataPermissions"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-Sessions"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppData/index/*"


  # # # # # # # # # # # # # # # # #
  # Publicly accessible endpoints #
  # # # # # # # # # # # # # # # # #
  #TODO: Enable anonymous sessions ie: to support carts for guests
  PublicWebsite:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./handlers/app
      Timeout: 30
      Environment:
        Variables:
          TYPE: "WEBSITE"
      Events:
        Request:
          Type: Api
          Properties:
            Method: GET
            RestApiId: 
              Ref: PluginRestApi
            Path: /api/plugins/serverless-cms/static/{proxy+}
            Auth:
              Authorizer: NONE
      FunctionName: 
          Fn::Sub: "acentera-${AWS::StackName}-PublicWebsite"
      Runtime: go1.x

# # # # # # # # # # # # # # # # # # #
# Cloud Front configuration         #
# # # # # # # # # # # # # # # # # # #
  ServerlessCloudfront:
    Type: AWS::CloudFront::Distribution
    DependsOn:
       - PluginRestApi
       # - AddSiteExecute
       # - AddPluginSiteExcute
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to api gateway static page
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        # Aliases:
        # - !Ref 'FullDomainName'
        IPV6Enabled: true
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          Compress: true
          TargetOriginId: Static
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
            Headers: #define explicit headers, since API Gateway doesn't work otherwise
              - Accept
              - Content-Type
          ViewerProtocolPolicy: redirect-to-https
        CacheBehaviors: #second the behavior for the API Gateway
          - AllowedMethods: #allow all method for the backend to implement
              - GET
              - HEAD
              - OPTIONS
            CachedMethods: #cache only on get requests
              - GET
              - HEAD
              - OPTIONS
            DefaultTTL: 60
            MinTTL: 60
            MaxTTL: 300
            Compress: true
            ForwardedValues:
              Headers: #define explicit headers, since API Gateway doesn't work otherwise
                - Accept
                - Referer
                - Athorization
                - Content-Type
                - Access-Control-Allow-Headers
              QueryString: true #to transfer get parameters to the gateway
            PathPattern: 
               Fn::Sub: "/api/plugins/<%PLUGIN_NAME%>/static/*" # Path pattern after the Gateway stage identifier.
            TargetOriginId:
               Fn::Sub: Plugin-<%PLUGIN_NAME%>-Api" #id of the orignin
            ViewerProtocolPolicy: https-only #API Gateway only support https

          - AllowedMethods: #allow all method for the backend to implement
              - GET
              - HEAD
              - OPTIONS
            CachedMethods: #cache only on get requests
              - GET
              - HEAD
              - OPTIONS
            DefaultTTL: 60
            MinTTL: 60
            MaxTTL: 300
            Compress: true
            ForwardedValues:
              Headers: #define explicit headers, since API Gateway doesn't work otherwise
                - Accept
                - Referer
                - Athorization
                - Content-Type
                - Access-Control-Allow-Headers
              QueryString: true #to transfer get parameters to the gateway
            PathPattern: 
               Fn::Sub: "/api/plugins/<%PLUGIN_NAME%>/static*" #path pattern after the Gateway stage identifier.
            TargetOriginId: 
               Fn::Sub: "Plugin-<%PLUGIN_NAME%>-Api" # id of the orignin
            ViewerProtocolPolicy: https-only #API Gateway only support https

          - AllowedMethods: #allow all method for the backend to implement
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods: #cache only on get requests
              - GET
              - HEAD
              - OPTIONS
            DefaultTTL: 0
            MinTTL: 0
            MaxTTL: 0
            Compress: true
            ForwardedValues:
              Headers: #define explicit headers, since API Gateway doesn't work otherwise
                - Accept
                - Referer
                - Athorization
                - Content-Type
                - Token
                - Access-Control-Allow-Headers
                - X-Token
              QueryString: true #to transfer get parameters to the gateway
            PathPattern: 
               Fn::Sub: "/api/plugins/<%PLUGIN_NAME%>/*" #path pattern after the Gateway stage identifier.
            TargetOriginId: 
               Fn::Sub: "Plugin-<%PLUGIN_NAME%>-Api" #id of the orignin
            ViewerProtocolPolicy: https-only #API Gateway only support https

          - AllowedMethods: #allow all method for the backend to implement
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods: #cache only on get requests
              - GET
              - HEAD
              - OPTIONS
            DefaultTTL: 0
            MinTTL: 0
            MaxTTL: 0
            Compress: true
            ForwardedValues:
              Headers: #define explicit headers, since API Gateway doesn't work otherwise
                - Accept
                - Referer
                - Athorization
                - Content-Type
                - Token
                - Access-Control-Allow-Headers
                - X-Token
              QueryString: true #to transfer get parameters to the gateway
            PathPattern: "/api/*" #path pattern after the Gateway stage identifier.
            TargetOriginId: Api #id of the orignin
            ViewerProtocolPolicy: https-only #API Gateway only support https
        Origins:
          # Warning ordering is important.
          # Add plugin first then add the default core api's
          # Add Current API Gateway Plugin
          # This also serves the static endpoints..
          - DomainName: 
               Fn::Sub:
                  - "${RESTAPI}.execute-api.${AWS::Region}.amazonaws.com"
                  - RESTAPI: 
                      Ref: PluginRestApi
            Id:
              Fn::Sub: "Plugin-<%PLUGIN_NAME%>-Api"

            CustomOriginConfig:
              OriginReadTimeout: 60
              OriginProtocolPolicy: https-only
            OriginCustomHeaders:
              - HeaderName: "X-Site"
                HeaderValue: 
                   Ref: SiteKey
              - HeaderName: "X-Plugin"
                HeaderValue: "<%PLUGIN_NAME%>"
            OriginPath: "/Prod"

          - DomainName:
               Fn::ImportValue:
                  Fn::Sub: "acentera:<%STAGE%>:ApiGateway:DomainName"
            Id: Api
            CustomOriginConfig:
              OriginReadTimeout: 60
              OriginProtocolPolicy: https-only
            OriginCustomHeaders:
              - HeaderName: "X-Site"
                HeaderValue: 
                  Ref: SiteKey
              - HeaderName: "X-Plugin"
                HeaderValue: "<%PLUGIN_NAME%>"
            OriginPath: '/Prod'

          - DomainName:
               Fn::ImportValue:
                  Fn::Sub: "acentera:<%STAGE%>:ApiGateway:DomainName"
            Id: Static
            CustomOriginConfig:
              OriginReadTimeout: 60
              OriginProtocolPolicy: https-only
            OriginCustomHeaders:
              - HeaderName: "X-Site"
                HeaderValue: 
                  Ref: SiteKey
              - HeaderName: "X-Plugin"
                HeaderValue: "<%PLUGIN_NAME%>"
            OriginPath: '/Prod/static'

        PriceClass: PriceClass_100
      Tags:
        - Key: 'acentera:id'
          Value: 
            Fn::Sub: '<%PLUGIN_NAME%>-${SiteKey}'
        - Key: 'environment'
          Value: 
            Fn::Sub: '<%STAGE%>'


  # Limit actions by cognito groups or iam auth example ...
  # https://docs.aws.amazon.com/appsync/latest/devguide/security.html#aws-iam-authorization
  AppSyncSchema:
    DependsOn:
    - GraphApi
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: 
        Fn::GetAtt: 'GraphApi.ApiId'
      DefinitionS3Location: schema.graphql

  ModelLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./handlers/app
      Runtime: go1.x
      Environment:
        Variables:
          TYPE: "MODELS"
      Policies:
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppData"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppDataPermissions"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-Sessions"
         - DynamoDBCrudPolicy:
            TableName: "acentera-<%STAGE%>-AppData/index/*"

  AppSyncModelDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: 
        Fn::GetAtt: 'GraphApi.ApiId'
      Name:
         Fn::Sub: "acentera_model"
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: 
          Fn::GetAtt: "ModelLambda.Arn"
      ServiceRoleArn: 
          Fn::ImportValue:
            Fn::Sub: "acentera:<%STAGE%>:AppSync:WriterRole"

  AppSyncModelProjectDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: 
        Fn::GetAtt: 'GraphApi.ApiId'
      Name: 
         Fn::Sub: "acentera_model_projects"
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: 
           Fn::GetAtt: "ModelLambda.Arn"
      ServiceRoleArn: 
         Fn::ImportValue:
            Fn::Sub: "acentera:<%STAGE%>:AppSync:WriterRole"


  
  AppSyncModelWebhookQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: webhook
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.webhook", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWebhooksQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: webhooks
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.webhooks", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWebhookEventsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: webhookEvents
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.webhookEvents", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWebhookSamplePayloadQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: webhookSamplePayload
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.webhookSamplePayload", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWarehouseQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: warehouse
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.warehouse", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWarehousesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: warehouses
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.warehouses", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelTranslationsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: translations
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.translations", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelTranslationQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: translation
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.translation", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStockQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: stock
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.stock", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStocksQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: stocks
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.stocks", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShopQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: shop
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.shop", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingZoneQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: shippingZone
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.shippingZone", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingZonesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: shippingZones
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.shippingZones", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDigitalContentQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: digitalContent
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.digitalContent", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDigitalContentsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: digitalContents
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.digitalContents", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: attributes
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.attributes", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: attribute
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.attribute", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoriesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: categories
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.categories", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: category
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.category", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: collection
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.collection", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: collections
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.collections", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: product
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.product", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: products
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.products", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: productType
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.productType", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: productTypes
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.productTypes", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: productVariant
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.productVariant", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: productVariants
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.productVariants", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelReportProductSalesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: reportProductSales
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.reportProductSales", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPaymentQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: payment
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.payment", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPaymentsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: payments
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.payments", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPageQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: page
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.page", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPagesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: pages
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.pages", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelHomepageEventsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: homepageEvents
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.homepageEvents", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: order
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.order", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrdersQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: orders
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.orders", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrdersQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: draftOrders
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.draftOrders", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrdersTotalQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: ordersTotal
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.ordersTotal", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderByTokenQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: orderByToken
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.orderByToken", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: menu
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.menu", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenusQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: menus
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.menus", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuItemQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: menuItem
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.menuItem", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuItemsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: menuItems
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.menuItems", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGiftCardQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: giftCard
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.giftCard", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGiftCardsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: giftCards
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.giftCards", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPluginQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: plugin
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.plugin", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPluginsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: plugins
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.plugins", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSaleQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: sale
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.sale", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSalesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: sales
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.sales", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVoucherQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: voucher
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.voucher", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVouchersQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: vouchers
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.vouchers", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelTaxTypesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: taxTypes
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.taxTypes", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: checkout
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.checkout", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: checkouts
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.checkouts", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutLineQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: checkoutLine
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.checkoutLine", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutLinesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: checkoutLines
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.checkoutLines", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAddressValidationRulesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: addressValidationRules
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.addressValidationRules", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAddressQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: address
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.address", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCustomersQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: customers
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.customers", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMeQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: me
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.me", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStaffUsersQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: staffUsers
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.staffUsers", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelServiceAccountsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: serviceAccounts
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.serviceAccounts", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelServiceAccountQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: serviceAccount
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.serviceAccount", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUserQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: user
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.user", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModel_entitiesQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: _entities
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query._entities", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModel_serviceQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: _service
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query._service", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGetAuthorQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: getAuthor
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.getAuthor", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelBatchgetAuthtorQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: batchgetAuthtor
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.batchgetAuthtor", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelListAllAuthorsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: listAllAuthors
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.listAllAuthors", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelListAuthorsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: listAuthors
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.listAuthors", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGetPostQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: getPost
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.getPost", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelListPostsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: listPosts
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.listPosts", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelListAllProjectsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: listAllProjects
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.listAllProjects", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelListProjectsQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: listProjects
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.listProjects", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGetTaskQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: getTask
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.getTask", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelListTasksQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: listTasks
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.listTasks", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGetUserPublicInfoQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: getUserPublicInfo
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.getUserPublicInfo", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelBatchgetUserPublicInfoQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: batchgetUserPublicInfo
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.batchgetUserPublicInfo", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelListUsersQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: listUsers
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.listUsers", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelListAllUsersQueries:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Query
      FieldName: listAllUsers
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.listAllUsers", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
   




  
  AppSyncModelWishlistAddProductMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: wishlistAddProduct
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.wishlistAddProduct", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWishlistRemoveProductMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: wishlistRemoveProduct
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.wishlistRemoveProduct", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWishlistAddVariantMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: wishlistAddVariant
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.wishlistAddVariant", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWishlistRemoveVariantMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: wishlistRemoveVariant
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.wishlistRemoveVariant", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWebhookCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: webhookCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.webhookCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWebhookDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: webhookDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.webhookDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelWebhookUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: webhookUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.webhookUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCreateWarehouseMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: createWarehouse
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.createWarehouse", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUpdateWarehouseMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: updateWarehouse
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.updateWarehouse", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDeleteWarehouseMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: deleteWarehouse
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.deleteWarehouse", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCreateStockMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: createStock
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.createStock", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUpdateStockMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: updateStock
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.updateStock", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDeleteStockMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: deleteStock
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.deleteStock", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelBulkDeleteStockMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: bulkDeleteStock
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.bulkDeleteStock", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAuthorizationKeyAddMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: authorizationKeyAdd
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.authorizationKeyAdd", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAuthorizationKeyDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: authorizationKeyDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.authorizationKeyDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStaffNotificationRecipientCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: staffNotificationRecipientCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.staffNotificationRecipientCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStaffNotificationRecipientUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: staffNotificationRecipientUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.staffNotificationRecipientUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStaffNotificationRecipientDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: staffNotificationRecipientDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.staffNotificationRecipientDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelHomepageCollectionUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: homepageCollectionUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.homepageCollectionUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShopDomainUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shopDomainUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shopDomainUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShopSettingsUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shopSettingsUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shopSettingsUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShopFetchTaxRatesMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shopFetchTaxRates
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shopFetchTaxRates", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShopSettingsTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shopSettingsTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shopSettingsTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShopAddressUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shopAddressUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shopAddressUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingPriceCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shippingPriceCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shippingPriceCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingPriceDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shippingPriceDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shippingPriceDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingPriceBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shippingPriceBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shippingPriceBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingPriceUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shippingPriceUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shippingPriceUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingPriceTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shippingPriceTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shippingPriceTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingZoneCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shippingZoneCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shippingZoneCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingZoneDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shippingZoneDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shippingZoneDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingZoneBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shippingZoneBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shippingZoneBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelShippingZoneUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: shippingZoneUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.shippingZoneUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeAssignMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeAssign
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeAssign", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeUnassignMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeUnassign
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeUnassign", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeUpdateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeUpdateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeUpdateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeClearMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeClearMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeClearMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeUpdatePrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeUpdatePrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeUpdatePrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeClearPrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeClearPrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeClearPrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeValueCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeValueCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeValueCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeValueDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeValueDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeValueDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeValueBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeValueBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeValueBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeValueUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeValueUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeValueUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeValueTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeValueTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeValueTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAttributeReorderValuesMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: attributeReorderValues
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.attributeReorderValues", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: categoryCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.categoryCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: categoryDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.categoryDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: categoryBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.categoryBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: categoryUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.categoryUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: categoryTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.categoryTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryUpdateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: categoryUpdateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.categoryUpdateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryClearMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: categoryClearMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.categoryClearMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryUpdatePrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: categoryUpdatePrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.categoryUpdatePrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCategoryClearPrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: categoryClearPrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.categoryClearPrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionAddProductsMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionAddProducts
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionAddProducts", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionReorderProductsMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionReorderProducts
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionReorderProducts", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionBulkPublishMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionBulkPublish
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionBulkPublish", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionRemoveProductsMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionRemoveProducts
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionRemoveProducts", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionUpdateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionUpdateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionUpdateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionClearMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionClearMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionClearMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionUpdatePrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionUpdatePrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionUpdatePrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCollectionClearPrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: collectionClearPrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.collectionClearPrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductBulkPublishMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productBulkPublish
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productBulkPublish", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductUpdateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productUpdateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productUpdateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductClearMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productClearMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productClearMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductUpdatePrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productUpdatePrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productUpdatePrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductClearPrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productClearPrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productClearPrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductImageCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productImageCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productImageCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductImageDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productImageDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productImageDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductImageBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productImageBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productImageBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductImageReorderMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productImageReorder
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productImageReorder", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductImageUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productImageUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productImageUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTypeCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTypeCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTypeDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTypeDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTypeBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTypeBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTypeUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTypeUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeReorderAttributesMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTypeReorderAttributes
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTypeReorderAttributes", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeUpdateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTypeUpdateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTypeUpdateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeClearMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTypeClearMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTypeClearMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeUpdatePrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTypeUpdatePrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTypeUpdatePrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductTypeClearPrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productTypeClearPrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productTypeClearPrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDigitalContentCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: digitalContentCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.digitalContentCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDigitalContentDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: digitalContentDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.digitalContentDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDigitalContentUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: digitalContentUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.digitalContentUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDigitalContentUrlCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: digitalContentUrlCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.digitalContentUrlCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantBulkCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantBulkCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantBulkCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantUpdateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantUpdateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantUpdateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantClearMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantClearMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantClearMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantUpdatePrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantUpdatePrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantUpdatePrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelProductVariantClearPrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: productVariantClearPrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.productVariantClearPrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVariantImageAssignMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: variantImageAssign
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.variantImageAssign", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVariantImageUnassignMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: variantImageUnassign
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.variantImageUnassign", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPaymentCaptureMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: paymentCapture
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.paymentCapture", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPaymentRefundMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: paymentRefund
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.paymentRefund", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPaymentVoidMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: paymentVoid
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.paymentVoid", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPaymentSecureConfirmMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: paymentSecureConfirm
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.paymentSecureConfirm", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPageCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: pageCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.pageCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPageDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: pageDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.pageDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPageBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: pageBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.pageBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPageBulkPublishMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: pageBulkPublish
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.pageBulkPublish", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPageUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: pageUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.pageUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPageTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: pageTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.pageTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrderCompleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: draftOrderComplete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.draftOrderComplete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrderCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: draftOrderCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.draftOrderCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrderDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: draftOrderDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.draftOrderDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrderBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: draftOrderBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.draftOrderBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrderLinesBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: draftOrderLinesBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.draftOrderLinesBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrderLinesCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: draftOrderLinesCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.draftOrderLinesCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrderLineDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: draftOrderLineDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.draftOrderLineDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrderLineUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: draftOrderLineUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.draftOrderLineUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDraftOrderUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: draftOrderUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.draftOrderUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderAddNoteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderAddNote
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderAddNote", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderCancelMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderCancel
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderCancel", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderCaptureMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderCapture
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderCapture", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderClearPrivateMetaMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderClearPrivateMeta
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderClearPrivateMeta", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderClearMetaMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderClearMeta
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderClearMeta", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderFulfillmentCancelMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderFulfillmentCancel
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderFulfillmentCancel", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderFulfillmentCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderFulfillmentCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderFulfillmentCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderFulfillmentUpdateTrackingMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderFulfillmentUpdateTracking
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderFulfillmentUpdateTracking", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderFulfillmentClearMetaMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderFulfillmentClearMeta
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderFulfillmentClearMeta", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderFulfillmentClearPrivateMetaMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderFulfillmentClearPrivateMeta
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderFulfillmentClearPrivateMeta", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderFulfillmentUpdateMetaMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderFulfillmentUpdateMeta
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderFulfillmentUpdateMeta", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderFulfillmentUpdatePrivateMetaMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderFulfillmentUpdatePrivateMeta
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderFulfillmentUpdatePrivateMeta", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderMarkAsPaidMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderMarkAsPaid
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderMarkAsPaid", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderRefundMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderRefund
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderRefund", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderUpdateMetaMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderUpdateMeta
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderUpdateMeta", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderUpdatePrivateMetaMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderUpdatePrivateMeta
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderUpdatePrivateMeta", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderUpdateShippingMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderUpdateShipping
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderUpdateShipping", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderVoidMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderVoid
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderVoid", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelOrderBulkCancelMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: orderBulkCancel
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.orderBulkCancel", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAssignNavigationMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: assignNavigation
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.assignNavigation", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuItemCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuItemCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuItemCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuItemDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuItemDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuItemDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuItemBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuItemBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuItemBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuItemUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuItemUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuItemUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuItemTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuItemTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuItemTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelMenuItemMoveMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: menuItemMove
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.menuItemMove", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGiftCardActivateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: giftCardActivate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.giftCardActivate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGiftCardCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: giftCardCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.giftCardCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGiftCardDeactivateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: giftCardDeactivate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.giftCardDeactivate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelGiftCardUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: giftCardUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.giftCardUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPluginUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: pluginUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.pluginUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSaleCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: saleCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.saleCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSaleDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: saleDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.saleDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSaleBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: saleBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.saleBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSaleUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: saleUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.saleUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSaleCataloguesAddMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: saleCataloguesAdd
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.saleCataloguesAdd", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSaleCataloguesRemoveMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: saleCataloguesRemove
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.saleCataloguesRemove", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSaleTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: saleTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.saleTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVoucherCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: voucherCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.voucherCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVoucherDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: voucherDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.voucherDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVoucherBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: voucherBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.voucherBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVoucherUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: voucherUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.voucherUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVoucherCataloguesAddMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: voucherCataloguesAdd
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.voucherCataloguesAdd", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVoucherCataloguesRemoveMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: voucherCataloguesRemove
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.voucherCataloguesRemove", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelVoucherTranslateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: voucherTranslate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.voucherTranslate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelTokenCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: tokenCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.tokenCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelTokenRefreshMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: tokenRefresh
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.tokenRefresh", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelTokenVerifyMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: tokenVerify
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.tokenVerify", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutAddPromoCodeMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutAddPromoCode
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutAddPromoCode", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutBillingAddressUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutBillingAddressUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutBillingAddressUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutCompleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutComplete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutComplete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutCustomerAttachMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutCustomerAttach
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutCustomerAttach", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutCustomerDetachMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutCustomerDetach
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutCustomerDetach", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutEmailUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutEmailUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutEmailUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutLineDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutLineDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutLineDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutLinesAddMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutLinesAdd
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutLinesAdd", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutLinesUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutLinesUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutLinesUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutRemovePromoCodeMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutRemovePromoCode
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutRemovePromoCode", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutPaymentCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutPaymentCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutPaymentCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutShippingAddressUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutShippingAddressUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutShippingAddressUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutShippingMethodUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutShippingMethodUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutShippingMethodUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutUpdateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutUpdateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutUpdateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutClearMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutClearMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutClearMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutUpdatePrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutUpdatePrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutUpdatePrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCheckoutClearPrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: checkoutClearPrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.checkoutClearPrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelRequestPasswordResetMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: requestPasswordReset
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.requestPasswordReset", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelConfirmAccountMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: confirmAccount
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.confirmAccount", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelSetPasswordMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: setPassword
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.setPassword", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelPasswordChangeMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: passwordChange
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.passwordChange", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelRequestEmailChangeMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: requestEmailChange
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.requestEmailChange", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelConfirmEmailChangeMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: confirmEmailChange
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.confirmEmailChange", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAccountAddressCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: accountAddressCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.accountAddressCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAccountAddressUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: accountAddressUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.accountAddressUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAccountAddressDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: accountAddressDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.accountAddressDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAccountSetDefaultAddressMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: accountSetDefaultAddress
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.accountSetDefaultAddress", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAccountRegisterMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: accountRegister
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.accountRegister", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAccountUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: accountUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.accountUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAccountRequestDeletionMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: accountRequestDeletion
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.accountRequestDeletion", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAccountDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: accountDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.accountDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAccountUpdateMetaMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: accountUpdateMeta
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.accountUpdateMeta", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAddressCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: addressCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.addressCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAddressUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: addressUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.addressUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAddressDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: addressDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.addressDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelAddressSetDefaultMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: addressSetDefault
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.addressSetDefault", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCustomerCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: customerCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.customerCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCustomerUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: customerUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.customerUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCustomerDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: customerDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.customerDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCustomerBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: customerBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.customerBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStaffCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: staffCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.staffCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStaffUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: staffUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.staffUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStaffDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: staffDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.staffDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelStaffBulkDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: staffBulkDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.staffBulkDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUserAvatarUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: userAvatarUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.userAvatarUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUserAvatarDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: userAvatarDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.userAvatarDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUserBulkSetActiveMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: userBulkSetActive
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.userBulkSetActive", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUserUpdateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: userUpdateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.userUpdateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUserClearMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: userClearMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.userClearMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUserUpdatePrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: userUpdatePrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.userUpdatePrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUserClearPrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: userClearPrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.userClearPrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelServiceAccountCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: serviceAccountCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.serviceAccountCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelServiceAccountUpdateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: serviceAccountUpdate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.serviceAccountUpdate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelServiceAccountDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: serviceAccountDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.serviceAccountDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelServiceAccountUpdatePrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: serviceAccountUpdatePrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.serviceAccountUpdatePrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelServiceAccountClearPrivateMetadataMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: serviceAccountClearPrivateMetadata
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.serviceAccountClearPrivateMetadata", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelServiceAccountTokenCreateMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: serviceAccountTokenCreate
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.serviceAccountTokenCreate", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelServiceAccountTokenDeleteMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: serviceAccountTokenDelete
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.serviceAccountTokenDelete", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCreatePostMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: createPost
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.createPost", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUpdatePostMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: updatePost
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.updatePost", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDeletePostMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: deletePost
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.deletePost", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCreateProjectMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: createProject
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.createProject", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUpdateProjectMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: updateProject
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.updateProject", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDeleteProjectMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: deleteProject
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.deleteProject", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCreateTasksMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: createTasks
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.createTasks", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelUpdateTasksMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: updateTasks
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.updateTasks", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelDeleteTasksMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: deleteTasks
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.deleteTasks", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
  
  AppSyncModelCreateUserProjectMutations:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt: 'GraphApi.ApiId'
      TypeName: Mutation
      FieldName: createUserProject
      DataSourceName:
        Fn::GetAtt: "AppSyncModelDataSource.Name"
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "mutation.createUserProject", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: '$util.toJson($context.result)'
   

