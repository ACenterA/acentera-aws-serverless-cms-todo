version: '3.7'
services:
  serverless-cms-vue:
    build:
      context: .
      args:
        USER:
        UID:
        GID:
    volumes:
      - .:/usr/app/
      - ./entrypoint.sh:/usr/local/bin/entrypoint.sh
      - ./backend/go/customvendors/static:/customvendors/static
    environment:
       HOST: 0.0.0.0
       PORT: 80
       PUBLIC: http://plugin.dev.acentera/
       # SOCKPORT: 'location'
       SOCKHOST: plugin.dev.acentera
       #PUBLIC: http://plugin.dev.acenteraa
       DEV_ACCOUNTID: ${DEV_ACCOUNTID}
       ENV_CONFIG: ${ENV_CONFIG}
       USER:
       UID: 
       GID:
    networks:
      traeffik:
      backend:
        aliases:
          - serverless-cms-vue.docker.internal
          - serverless-cms-vue
#    ports:
#      - "127.0.0.1:81:80"
#      - "127.0.0.1:9528:80"
#
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_plugin.rule=Host(`plugin.dev.acentera`)"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_plugin.entrypoints=http"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_https_plugin.rule=Host(`plugin.dev.acentera`)"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_https_plugin.entrypoints=https"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_https_plugin.tls=true"
       #- "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_https_plugin.redirectscheme.scheme=http"
     - "traefik.http.services.${COMPOSE_PROJECT_NAME}_https_plugin.loadbalancer.server.port=80"

  serverless-cms-graphql:
    build:
      context: .
      dockerfile: Dockerfile-graph
    env_file:                                                                                     
       - .env            
    volumes:
      # vi cause issues..
      #- ./backend/appsync.local.js:/usr/app/backend/appsync.local.js
      - ./backend/:/usr/app/backend/
      - ./backend/go/schema.graphql:/usr/app/backend/schema.graphql
      - ./backend/go/template.yml:/usr/app/backend/template.yml
      - ./src/gql/:/usr/app/gql
    environment:
       LOCAL_LAMBDA_HOST: serverless-cms.
       LOCAL_LAMBDA_PORT: 3000
       PLUGINNAME: ${PLUGIN_NAME}                                                                  
       DEBUG: "true"
       WORKDIR: "/usr/app/"
       USER: "acentera"
       UID: 
       GID:
       PLUGIN_NAME: ${PLUGIN_NAME}                                                  
       PluginName: ${PLUGIN_NAME}                                          
       SITE_KEY: ${PLUGIN_KEY}                                                                    
    networks:
      traeffik:
      backend:
        aliases:
          - serverless-cms-graphql.docker.internal
          - serverless-cms-graphql
#    ports:
#      - "127.0.0.1:4000:4000"
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_graphql.rule=Host(`graphql.dev.acentera`)"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_graphql.entrypoints=http"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_https_graphql.rule=Host(`graphql.dev.acentera`)"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_https_graphql.entrypoints=https"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_https_graphql.tls=true"
     - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_https_graphql.redirectscheme.scheme=https"
     - "traefik.http.services.${COMPOSE_PROJECT_NAME}_https_graphql.loadbalancer.server.port=4000"

  serverless-cms:                                                                                 
    build:                                                                                        
       context: .
       dockerfile: backend/go/Dockerfile
    volumes:                                                                                      
      - ./backend/go/:/go/src/github.com/myplugin/gofaas
      - ./src/gql/schema:/go/src/github.com/myplugin/gofaas/schema
      - ./README.md:/go/src/github.com/myplugin/gofaas/README.md:ro
      - ./LICENSE:/go/src/github.com/myplugin/gofaas/LICENSE:ro
      - ./go/shared:${PWD}/backend/go/shared
      - ./backend/go/customvendors/static:/go/src/github.com/acenterastatic/static
      - /var/run/docker.sock:/var/run/docker.sock:rw
    # network_mode: bridge                                                                        
    networks:                                                                                     
      traeffik:
      backend:                                                                                    
        aliases:                                                                                  
          - serverless-cms.docker.internal
          - serverless-cms
    env_file:                                                                                     
       - .env            
    environment:                                                                  
       PLUGINNAME: ${PLUGIN_NAME}                                                                  
       PLUGIN_NAME: ${PLUGIN_NAME}                                                  
       PluginName: ${PLUGIN_NAME}                                          
       SITE_KEY: ${PLUGIN_KEY}                                                                    
       DOCKER_NETWORK: ${COMPOSE_PROJECT_NAME}_backend                                           
       JWT_SECRET: "docker-compose-secret"            
       STACK_ID: "arn:aws:cloudformation:us-east-1:123456789012:stack/local/51af3dc0-da77-11e4-872e-1234567db123"
       SESSION_TABLE_NAME: "app-data-sessions"                                                                   
       SMS_CONFIG_ARN: ""                                                                                        
       ADMIN_USERNAME: ${ADMIN_USERNAME}                                                                         
       AWS_LAMBDA_FUNCTION_HANDLER: "main"                                                                       
       EMAIL_ENABLED: "false"                                                                                    
       SMS_CONFIG_EXTERNAL_ID: ""                                                                                
       KEY_ID: ${KEY_ID}                                                                                         
       AWS_ACCESS_KEY_ID: "a"                                                                                    
       APP_DATA_PERM_TABLE_NAME: "app-data-permissions"                                                          
       AWS_DEFAULT_REGION: "us-east-1"                 
       SKIP_SSM: "true"                                                                   
       LOGINSRV_DYNAMODB: "endpoint=http://dynamodb.docker.internal:8000,table=app-data"     
       SKIP_COGNITO: "true"                                                                     
       STACK_NAME: "local"                                                          
       AWS_SAM_LOCAL: "true"                                               
       AWS_REGION: "us-east-1"                                                                    
       SECRET: ""                                                                                
       AWS_SECRET_ACCESS_KEY: "a"                                       
       APP_DATA_TABLE_NAME: "app-data"                                  
       STAGE: ""                                                        
       RUNWS: "true"                                                    
       HOME_PWD: ${PWD}/backend/go/   
    labels:                                                                                       
     - "traefik.enable=true"                                                                      
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_cmsapi.rule=Host(`cmsapi.dev.acentera`)"      
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_cmsapi.entrypoints=http"                      
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_https_cmsapi.rule=Host(`cmsapi.dev.acentera`)"
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_https_cmsapi.entrypoints=https"               
     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_https_cmsapi.tls=true"                        
     - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_https_cmsapi.redirectscheme.scheme=https" 
     - "traefik.http.services.${COMPOSE_PROJECT_NAME}_https_cmsapi.loadbalancer.server.port=3001"  
#    ports:                                                                                         
#      - "3003:3000"                                                                                
#      - "3001:3000"                                                                                
    command: |                                                                                     
       make dev-watch  

                             
networks: 
    backend:             
        external:
            name: acentera_backend

    traeffik:
       external:
          name: acentera_backend

